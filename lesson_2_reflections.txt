What happens when you initialize a repository? Why do you need to do it?
	We create a git repository which creates a hidden .git folder. This is done to initialize the git repository for use with git.

How is the staging area different from the working directory and the repository? What value do you think it offers?
	The staging area allows us to add individually selected files to be committed to the repository. It acts as a buffer which can be edited so that the user can commit files individually.

How can you use the staging area to make sure you have one commit per logical change?
	We can view the difference in the code in the staging area and the most recent commit and see if our changes are the one we wish to commit.
	
What are some situations when branches would be helpful in keeping your history organized? How would branches help?
	If we use branches for each new feature to a program we can keep track of all the features that have been added and when. We can basically view the history of all major changes to the code.

How do the diagrams help you visualize the branch structure?
	The diagrams allow us to visualize the entire history in the git logg and help us to better understand the hierarchy.

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?
	The result is that we can visualize the whole history and get a better understanding of how the entire merge process works. With git keeping a copy of the initial fork of the branch, it is able to determine which changes to keep or discard.
	